import{Tooltip}from"https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/+esm";import imageCompareViewer from"https://cdn.jsdelivr.net/npm/image-compare-viewer@1.6.2/+esm";import{MedianCut,OctreeQuantization,}from"https://cdn.jsdelivr.net/npm/@marmooo/color-reducer@0.1.1/+esm";import{toSVG}from"https://cdn.jsdelivr.net/npm/@marmooo/imagetracer@0.0.3/+esm";function loadConfig(){localStorage.getItem("darkMode")==1&&document.documentElement.setAttribute("data-bs-theme","dark")}function toggleDarkMode(){localStorage.getItem("darkMode")==1?(localStorage.setItem("darkMode",0),document.documentElement.setAttribute("data-bs-theme","light")):(localStorage.setItem("darkMode",1),document.documentElement.setAttribute("data-bs-theme","dark"))}function initLangSelect(){const e=document.getElementById("lang");e.onchange=()=>{const t=e.options[e.selectedIndex].value;location.href=`/image2svg/${t}/`}}function initTooltip(){for(const t of document.querySelectorAll('[data-bs-toggle="tooltip"]')){const e=new Tooltip(t);t.addEventListener("touchstart",()=>e.show()),t.addEventListener("touchend",()=>e.hide()),t.addEventListener("click",()=>{if(!e.tip)return;e.tip.classList.add("d-none"),e.hide(),e.tip.classList.remove("d-none")})}}async function toBlob(e,t,n){return await new Promise(s=>e.toBlob(s,t,n))}class Panel{constructor(e){this.panel=e}show(){this.panel.classList.remove("d-none")}hide(){this.panel.classList.add("d-none")}getActualRect(e){const t=e.offsetWidth,n=e.offsetHeight,d=e.width,u=e.height,r=d/u;let s,o,i,a,c,l;return t/n>r?(s=n*r,o=n,i=0,a=(t-s)/2,c=a+s,l=n):(s=t,o=t/r,i=(n-o)/2,a=0,c=t,l=i+o),{width:s,height:o,top:i,left:a,right:c,bottom:l}}}class LoadPanel extends Panel{constructor(e){super(e);for(const e of document.querySelectorAll(".image-compare")){const t=e.querySelectorAll("img");t[0].classList.remove("w-100"),new imageCompareViewer(e,{addCircle:!0}).mount(),t[1].classList.remove("d-none")}e.querySelector(".selectImage").onclick=()=>{e.querySelector(".inputImage").click()},e.querySelector(".inputImage").onchange=e=>{this.loadInputImage(e)};const t=e.querySelector(".examples");if(t)for(const e of t.querySelectorAll("img"))e.onclick=()=>{const t=e.src.replace("-64","");this.loadImage(t)}}show(){super.show(),document.body.scrollIntoView({behavior:"instant"})}executeCamera(){this.hide(),cameraPanel.show(),cameraPanel.executeVideo()}handleImageOnloadEvent=e=>{const s=e.currentTarget;filterPanel.setCanvas(s);const t=new filterPanel.filters.octreeQuantization(filterPanel),n=filterPanel.panel.querySelector(".filterSelect");n.options[0].selected=!0,n.dispatchEvent(new Event("change")),filterPanel.currentFilter=t,filterPanel.canvas.classList.add("loading"),filterPanel.svg.classList.add("loading"),setTimeout(()=>{t.apply(...t.defaultOptions),filterPanel.canvas.classList.remove("loading"),filterPanel.svg.classList.remove("loading")},0)};loadImage(e){this.hide(),filterPanel.show();const t=new Image;t.onload=e=>this.handleImageOnloadEvent(e),t.src=e}loadInputImage(e){const t=e.currentTarget.files[0];this.loadFile(t),e.currentTarget.value=""}loadFile(e){if(!e.type.startsWith("image/"))return;if(e.type==="image/svg+xml"){alert("SVG is not supported.");return}const t=URL.createObjectURL(e);this.loadImage(t)}async loadClipboardImage(){try{const t=await navigator.clipboard.read(),e=t[0];for(const t of e.types)if(t==="image/svg+xml")alert("SVG is not supported.");else if(t.startsWith("image/")){const n=await e.getType(t),s=URL.createObjectURL(n);this.loadImage(s);break}}catch(e){console.error(e)}}}class FilterPanel extends LoadPanel{filters={};currentFilter;constructor(e){super(e),e.querySelector(".saveClipboard").onclick=async e=>{const t=e.currentTarget.children;t[0].classList.add("d-none"),t[1].classList.remove("d-none"),await navigator.clipboard.write([new ClipboardItem({"image/png":toBlob(this.canvas)})]),setTimeout(()=>{t[0].classList.remove("d-none"),t[1].classList.add("d-none")},2e3)},e.querySelector(".loadClipboard").onclick=e=>{this.loadClipboardImage(e)},this.selectedIndex=0,this.canvas=e.querySelector("canvas"),this.canvasContext=this.canvas.getContext("2d",{willReadFrequently:!0}),this.offscreenCanvas=document.createElement("canvas"),this.offscreenCanvasContext=this.offscreenCanvas.getContext("2d",{willReadFrequently:!0}),this.canvasContainer=this.canvas.parentNode,this.svg=e.querySelector("svg"),e.querySelector(".moveTop").onclick=()=>this.moveLoadPanel(),e.querySelector(".download").onclick=()=>this.download(),e.querySelector(".filterSelect").onchange=e=>this.filterSelect(e),this.addFilters(),this.imageTracerOptions=new ImageTracerOptions(this)}show(){super.show(),this.panel.scrollIntoView({behavior:"instant"})}moveLoadPanel(){this.hide(),loadPanel.show()}downloadFile(e){const t=document.createElement("a"),n=URL.createObjectURL(e);t.href=n,t.download=e.name,document.body.appendChild(t),t.click(),t.remove(),URL.revokeObjectURL(n)}download(){const e=this.convert(),t="traced.svg",n="image/svg+xml",s=new File([e],t,{type:n});this.downloadFile(s)}convert(){return this.svg.children.length==0&&this.imageTracerOptions.inputs.precision.dispatchEvent(new Event("input")),this.svg.outerHTML}filterSelect(e){const t=e.target.options,s=t.selectedIndex,i=t[this.selectedIndex].value,o=t[s].value;this.panel.querySelector(`.${i}`).classList.add("d-none"),this.panel.querySelector(`.${o}`).classList.remove("d-none"),this.selectedIndex=s;const n=new this.filters[o](this);this.currentFilter=n,n.apply(...n.defaultOptions)}addFilters(){this.filters.octreeQuantization=OctreeQuantizationFilter,this.filters.medianCut=MedianCutFilter}setCanvas(e){e.tagName.toLowerCase()==="img"?(this.canvas.width=e.naturalWidth,this.canvas.height=e.naturalHeight,this.offscreenCanvas.width=e.naturalWidth,this.offscreenCanvas.height=e.naturalHeight):(this.canvas.width=e.width,this.canvas.height=e.height,this.offscreenCanvas.width=e.width,this.offscreenCanvas.height=e.height),this.canvasContext.drawImage(e,0,0),this.offscreenCanvasContext.drawImage(e,0,0)}}class Filter{constructor(e,t){this.root=e,this.inputs=t,this.addInputEvents(e,t)}apply(){}addInputEvents(e,t){for(const e of Object.values(t))e.addEventListener("input",()=>this.apply());for(const t of e.querySelectorAll("button[title=reset]"))t.onclick=()=>{const e=t.previousElementSibling;e.value=e.dataset.value,e.dispatchEvent(new Event("input"))}}}class ImageTracerOptions extends Filter{cached=!1;defaultOptions=[0,1,1,1,3];constructor(e){const t=e.panel.querySelector(".imageTracerOptions"),n={filterHoles:t.querySelector(".filterHoles"),lineTolerance:t.querySelector(".lineTolerance"),splineTolerance:t.querySelector(".splineTolerance"),strokeWidth:t.querySelector(".strokeWidth"),precision:t.querySelector(".precision")};super(t,n),this.filterPanel=e,this.canvas=document.createElement("canvas"),this.canvasContext=this.canvas.getContext("2d",{willReadFrequently:!0}),this.checkFilterEvents()}checkFilterEvents(){const e=this.filterPanel.panel.querySelector(".filters");for(const t of e.querySelectorAll("input"))t.addEventListener("input",()=>{this.cached=!1,this.inputs.filterHoles.value=this.defaultOptions[0],this.inputs.lineTolerance.value=this.defaultOptions[1],this.inputs.splineTolerance.value=this.defaultOptions[2],this.inputs.strokeWidth.value=this.defaultOptions[3],this.inputs.precision.value=this.defaultOptions[4],filterPanel.canvasContext.drawImage(this.canvas,0,0)})}apply(){const{inputs:e}=this,n=filterPanel.currentFilter.quantizer,{width:s,height:o,replaceColors:i}=n,a=n.getIndexedImage(),r={filterHoles:Number(e.filterHoles.value),lineTolerance:Number(e.lineTolerance.value),splineTolerance:Number(e.splineTolerance.value),strokeWidth:Number(e.strokeWidth.value),precision:Number(e.precision.value)},c=toSVG(a,s,o,i,r),l=(new DOMParser).parseFromString(c,"image/svg+xml"),t=l.querySelector("svg");t.setAttribute("class","w-100 h-100 object-fit-contain"),filterPanel.svg.replaceWith(t),filterPanel.svg=t,filterPanel.canvas.classList.add("d-none"),filterPanel.svg.classList.remove("d-none")}}class MedianCutFilter extends Filter{defaultOptions=[6];constructor(e){const n=e.panel.querySelector(".medianCut"),s={color:n.querySelector(".color")};super(n,s);const t=e.offscreenCanvasContext.getImageData(0,0,e.canvas.width,e.canvas.height);this.filterPanel=e,this.quantizer=new MedianCut(t.data,t.width,t.height)}apply(e){const{inputs:n,filterPanel:t}=this;if(e===void 0?e=Number(n.color.value):n.color.value=e,e===9)t.canvasContext.drawImage(t.offscreenCanvas,0,0),t.canvas.classList.remove("d-none"),t.svg.classList.add("d-none");else{const{width:n,height:s}=this.quantizer,o=this.quantizer.apply(2**e),i=new ImageData(o,n,s);t.canvasContext.putImageData(i,0,0),t.canvas.classList.remove("d-none"),t.svg.classList.add("d-none")}}}class OctreeQuantizationFilter extends Filter{defaultOptions=[6];constructor(e){const n=e.panel.querySelector(".octreeQuantization"),s={color:n.querySelector(".color")};super(n,s);const t=e.offscreenCanvasContext.getImageData(0,0,e.canvas.width,e.canvas.height);this.filterPanel=e,this.quantizer=new OctreeQuantization(t.data,t.width,t.height)}apply(e){const{inputs:n,filterPanel:t}=this;if(e===void 0?e=Number(n.color.value):n.color.value=e,e===9)t.canvasContext.drawImage(t.offscreenCanvas,0,0),t.canvas.classList.remove("d-none"),t.svg.classList.add("d-none");else{const{width:n,height:s}=this.quantizer,o=this.quantizer.apply(2**e),i=new ImageData(o,n,s);t.canvasContext.putImageData(i,0,0),t.canvas.classList.remove("d-none"),t.svg.classList.add("d-none")}}}const filterPanel=new FilterPanel(document.getElementById("filterPanel")),loadPanel=new LoadPanel(document.getElementById("loadPanel"));loadConfig(),initLangSelect(),initTooltip(),document.getElementById("toggleDarkMode").onclick=toggleDarkMode,globalThis.ondragover=e=>{e.preventDefault()},globalThis.ondrop=e=>{e.preventDefault();const t=e.dataTransfer.files[0];loadPanel.loadFile(t)},globalThis.addEventListener("paste",e=>{const n=e.clipboardData.items[0],t=n.getAsFile();if(!t)return;loadPanel.loadFile(t)})